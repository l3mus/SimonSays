|top
red_out[0] << vga:VGA_DISPLAY.red_out[0]
red_out[1] << vga:VGA_DISPLAY.red_out[1]
red_out[2] << vga:VGA_DISPLAY.red_out[2]
red_out[3] << vga:VGA_DISPLAY.red_out[3]
red_out[4] << vga:VGA_DISPLAY.red_out[4]
red_out[5] << vga:VGA_DISPLAY.red_out[5]
red_out[6] << vga:VGA_DISPLAY.red_out[6]
red_out[7] << vga:VGA_DISPLAY.red_out[7]
green_out[0] << vga:VGA_DISPLAY.green_out[0]
green_out[1] << vga:VGA_DISPLAY.green_out[1]
green_out[2] << vga:VGA_DISPLAY.green_out[2]
green_out[3] << vga:VGA_DISPLAY.green_out[3]
green_out[4] << vga:VGA_DISPLAY.green_out[4]
green_out[5] << vga:VGA_DISPLAY.green_out[5]
green_out[6] << vga:VGA_DISPLAY.green_out[6]
green_out[7] << vga:VGA_DISPLAY.green_out[7]
blue_out[0] << vga:VGA_DISPLAY.blue_out[0]
blue_out[1] << vga:VGA_DISPLAY.blue_out[1]
blue_out[2] << vga:VGA_DISPLAY.blue_out[2]
blue_out[3] << vga:VGA_DISPLAY.blue_out[3]
blue_out[4] << vga:VGA_DISPLAY.blue_out[4]
blue_out[5] << vga:VGA_DISPLAY.blue_out[5]
blue_out[6] << vga:VGA_DISPLAY.blue_out[6]
blue_out[7] << vga:VGA_DISPLAY.blue_out[7]
hs_out << vga:VGA_DISPLAY.hs_out
clk25_out << vga:VGA_DISPLAY.clk25_out
sync << vga:VGA_DISPLAY.sync
blank << vga:VGA_DISPLAY.blank
vs_out << vga:VGA_DISPLAY.vs_out
displayCorrect << simon_says:GAME.displayCorrect
levelDisplay[0] << double_seven_seg:SevenSeg1.segment7[0]
levelDisplay[1] << double_seven_seg:SevenSeg1.segment7[1]
levelDisplay[2] << double_seven_seg:SevenSeg1.segment7[2]
levelDisplay[3] << double_seven_seg:SevenSeg1.segment7[3]
levelDisplay[4] << double_seven_seg:SevenSeg1.segment7[4]
levelDisplay[5] << double_seven_seg:SevenSeg1.segment7[5]
levelDisplay[6] << double_seven_seg:SevenSeg1.segment7[6]
levelDisplay[7] << double_seven_seg:SevenSeg1.segment7[7]
levelDisplay[8] << double_seven_seg:SevenSeg1.segment7[8]
levelDisplay[9] << double_seven_seg:SevenSeg1.segment7[9]
levelDisplay[10] << double_seven_seg:SevenSeg1.segment7[10]
levelDisplay[11] << double_seven_seg:SevenSeg1.segment7[11]
levelDisplay[12] << double_seven_seg:SevenSeg1.segment7[12]
levelDisplay[13] << double_seven_seg:SevenSeg1.segment7[13]
triesDisplay[0] << double_seven_seg:SevenSeg2.segment7[0]
triesDisplay[1] << double_seven_seg:SevenSeg2.segment7[1]
triesDisplay[2] << double_seven_seg:SevenSeg2.segment7[2]
triesDisplay[3] << double_seven_seg:SevenSeg2.segment7[3]
triesDisplay[4] << double_seven_seg:SevenSeg2.segment7[4]
triesDisplay[5] << double_seven_seg:SevenSeg2.segment7[5]
triesDisplay[6] << double_seven_seg:SevenSeg2.segment7[6]
triesDisplay[7] << double_seven_seg:SevenSeg2.segment7[7]
triesDisplay[8] << double_seven_seg:SevenSeg2.segment7[8]
triesDisplay[9] << double_seven_seg:SevenSeg2.segment7[9]
triesDisplay[10] << double_seven_seg:SevenSeg2.segment7[10]
triesDisplay[11] << double_seven_seg:SevenSeg2.segment7[11]
triesDisplay[12] << double_seven_seg:SevenSeg2.segment7[12]
triesDisplay[13] << double_seven_seg:SevenSeg2.segment7[13]
states[0] << simon_says:GAME.states[0]
states[1] << simon_says:GAME.states[1]
states[2] << simon_says:GAME.states[2]
clk_50 => simon_says:GAME.clk_50
clk_50 => vga:VGA_DISPLAY.clk50_in
clk_50 => double_seven_seg:SevenSeg1.clk
clk_50 => double_seven_seg:SevenSeg2.clk
newGame => simon_says:GAME.newGame
block0 => simon_says:GAME.block0
block1 => simon_says:GAME.block1
block2 => simon_says:GAME.block2
block3 => simon_says:GAME.block3
toggle => simon_says:GAME.toggle


|top|simon_says:GAME
blink[0] <= blink[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blink[1] <= blink[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
states[0] <= states[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
states[1] <= states[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
states[2] <= states[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
currentLevel[0] <= level[0].DB_MAX_OUTPUT_PORT_TYPE
currentLevel[1] <= level[1].DB_MAX_OUTPUT_PORT_TYPE
currentLevel[2] <= level[2].DB_MAX_OUTPUT_PORT_TYPE
currentLevel[3] <= level[3].DB_MAX_OUTPUT_PORT_TYPE
currentLevel[4] <= level[4].DB_MAX_OUTPUT_PORT_TYPE
currentTries[0] <= tries[0].DB_MAX_OUTPUT_PORT_TYPE
currentTries[1] <= tries[1].DB_MAX_OUTPUT_PORT_TYPE
currentTries[2] <= tries[2].DB_MAX_OUTPUT_PORT_TYPE
currentTries[3] <= tries[3].DB_MAX_OUTPUT_PORT_TYPE
currentTries[4] <= tries[4].DB_MAX_OUTPUT_PORT_TYPE
displayDim <= displayDim~reg0.DB_MAX_OUTPUT_PORT_TYPE
displayWin <= displayWin~reg0.DB_MAX_OUTPUT_PORT_TYPE
displayCorrect <= displayCorrect~reg0.DB_MAX_OUTPUT_PORT_TYPE
win <= win~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_50 => counter:Rand.clk
clk_50 => blink[0]~reg0.CLK
clk_50 => blink[1]~reg0.CLK
clk_50 => input[0].CLK
clk_50 => input[1].CLK
clk_50 => timer[0].CLK
clk_50 => timer[1].CLK
clk_50 => timer[2].CLK
clk_50 => timer[3].CLK
clk_50 => timer[4].CLK
clk_50 => timer[5].CLK
clk_50 => timer[6].CLK
clk_50 => timer[7].CLK
clk_50 => timer[8].CLK
clk_50 => timer[9].CLK
clk_50 => timer[10].CLK
clk_50 => timer[11].CLK
clk_50 => timer[12].CLK
clk_50 => timer[13].CLK
clk_50 => timer[14].CLK
clk_50 => timer[15].CLK
clk_50 => timer[16].CLK
clk_50 => timer[17].CLK
clk_50 => timer[18].CLK
clk_50 => timer[19].CLK
clk_50 => timer[20].CLK
clk_50 => timer[21].CLK
clk_50 => timer[22].CLK
clk_50 => timer[23].CLK
clk_50 => timer[24].CLK
clk_50 => timer[25].CLK
clk_50 => timer[26].CLK
clk_50 => timer[27].CLK
clk_50 => timer[28].CLK
clk_50 => timer[29].CLK
clk_50 => timer[30].CLK
clk_50 => timer[31].CLK
clk_50 => win~reg0.CLK
clk_50 => toggle_blink.CLK
clk_50 => displayCorrect~reg0.CLK
clk_50 => displayWin~reg0.CLK
clk_50 => displayDim~reg0.CLK
clk_50 => enable.CLK
clk_50 => count.CLK
clk_50 => clear.CLK
clk_50 => writeRegSel[0].CLK
clk_50 => writeRegSel[1].CLK
clk_50 => writeRegSel[2].CLK
clk_50 => writeRegSel[3].CLK
clk_50 => writeRegSel[4].CLK
clk_50 => regASel[0].CLK
clk_50 => regASel[1].CLK
clk_50 => regASel[2].CLK
clk_50 => regASel[3].CLK
clk_50 => regASel[4].CLK
clk_50 => writeEnable.CLK
clk_50 => tries[0].CLK
clk_50 => tries[1].CLK
clk_50 => tries[2].CLK
clk_50 => tries[3].CLK
clk_50 => tries[4].CLK
clk_50 => level[0].CLK
clk_50 => level[1].CLK
clk_50 => level[2].CLK
clk_50 => level[3].CLK
clk_50 => level[4].CLK
clk_50 => register_file:Reg.clk
clk_50 => action~8.DATAIN
newGame => level.OUTPUTSELECT
newGame => level.OUTPUTSELECT
newGame => level.OUTPUTSELECT
newGame => level.OUTPUTSELECT
newGame => level.OUTPUTSELECT
newGame => tries.OUTPUTSELECT
newGame => tries.OUTPUTSELECT
newGame => tries.OUTPUTSELECT
newGame => tries.OUTPUTSELECT
newGame => tries.OUTPUTSELECT
newGame => writeEnable.OUTPUTSELECT
newGame => regASel.OUTPUTSELECT
newGame => regASel.OUTPUTSELECT
newGame => regASel.OUTPUTSELECT
newGame => regASel.OUTPUTSELECT
newGame => regASel.OUTPUTSELECT
newGame => writeRegSel.OUTPUTSELECT
newGame => writeRegSel.OUTPUTSELECT
newGame => writeRegSel.OUTPUTSELECT
newGame => writeRegSel.OUTPUTSELECT
newGame => writeRegSel.OUTPUTSELECT
newGame => clear.OUTPUTSELECT
newGame => enable.OUTPUTSELECT
newGame => displayDim.OUTPUTSELECT
newGame => displayWin.OUTPUTSELECT
newGame => displayCorrect.OUTPUTSELECT
newGame => toggle_blink.OUTPUTSELECT
newGame => win.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => timer.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => action.OUTPUTSELECT
newGame => blink[1]~reg0.ENA
newGame => blink[0]~reg0.ENA
newGame => input[0].ENA
newGame => input[1].ENA
newGame => count.ENA
block0 => process_0.IN0
block0 => process_0.IN0
block0 => process_0.IN0
block0 => process_0.IN0
block1 => process_0.IN1
block1 => process_0.IN1
block1 => process_0.IN1
block1 => process_0.IN1
block2 => process_0.IN1
block2 => process_0.IN1
block2 => process_0.IN1
block2 => process_0.IN1
block2 => process_0.IN1
block3 => process_0.IN1
block3 => process_0.IN1
block3 => process_0.IN1
block3 => process_0.IN1
block3 => process_0.IN1
block3 => process_0.IN1
toggle => level.OUTPUTSELECT
toggle => level.OUTPUTSELECT
toggle => level.OUTPUTSELECT
toggle => level.OUTPUTSELECT
toggle => level.OUTPUTSELECT
toggle => tries.OUTPUTSELECT
toggle => tries.OUTPUTSELECT
toggle => tries.OUTPUTSELECT
toggle => tries.OUTPUTSELECT
toggle => tries.OUTPUTSELECT
toggle => writeEnable.OUTPUTSELECT
toggle => regASel.OUTPUTSELECT
toggle => regASel.OUTPUTSELECT
toggle => regASel.OUTPUTSELECT
toggle => regASel.OUTPUTSELECT
toggle => regASel.OUTPUTSELECT
toggle => writeRegSel.OUTPUTSELECT
toggle => writeRegSel.OUTPUTSELECT
toggle => writeRegSel.OUTPUTSELECT
toggle => writeRegSel.OUTPUTSELECT
toggle => writeRegSel.OUTPUTSELECT
toggle => clear.OUTPUTSELECT
toggle => enable.OUTPUTSELECT
toggle => displayDim.OUTPUTSELECT
toggle => displayWin.OUTPUTSELECT
toggle => displayCorrect.OUTPUTSELECT
toggle => toggle_blink.OUTPUTSELECT
toggle => win.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => timer.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => action.OUTPUTSELECT
toggle => input.OUTPUTSELECT
toggle => input.OUTPUTSELECT
toggle => blink.OUTPUTSELECT
toggle => blink.OUTPUTSELECT


|top|simon_says:GAME|counter:Rand
Q[0] <= Pre_Q[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Pre_Q[1].DB_MAX_OUTPUT_PORT_TYPE
CLK => Pre_Q[0].CLK
CLK => Pre_Q[1].CLK
ENABLE => Pre_Q[1].ENA
ENABLE => Pre_Q[0].ENA
CLEAR => Pre_Q[0].ACLR
CLEAR => Pre_Q[1].ACLR


|top|simon_says:GAME|register_file:Reg
outA[0] <= outA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outA[1] <= outA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
input[0] => outA.DATAB
input[0] => registers~6.DATAIN
input[0] => registers.DATAIN
input[1] => outA.DATAB
input[1] => registers~5.DATAIN
input[1] => registers.DATAIN1
writeEnable => outA.OUTPUTSELECT
writeEnable => outA.OUTPUTSELECT
writeEnable => registers~7.DATAIN
writeEnable => registers.WE
regASel[0] => Equal0.IN9
regASel[0] => registers.RADDR
regASel[1] => Equal0.IN8
regASel[1] => registers.RADDR1
regASel[2] => Equal0.IN7
regASel[2] => registers.RADDR2
regASel[3] => Equal0.IN6
regASel[3] => registers.RADDR3
regASel[4] => Equal0.IN5
regASel[4] => registers.RADDR4
writeRegSel[0] => Equal0.IN4
writeRegSel[0] => registers~4.DATAIN
writeRegSel[0] => registers.WADDR
writeRegSel[1] => Equal0.IN3
writeRegSel[1] => registers~3.DATAIN
writeRegSel[1] => registers.WADDR1
writeRegSel[2] => Equal0.IN2
writeRegSel[2] => registers~2.DATAIN
writeRegSel[2] => registers.WADDR2
writeRegSel[3] => Equal0.IN1
writeRegSel[3] => registers~1.DATAIN
writeRegSel[3] => registers.WADDR3
writeRegSel[4] => Equal0.IN0
writeRegSel[4] => registers~0.DATAIN
writeRegSel[4] => registers.WADDR4
clk => registers~7.CLK
clk => registers~0.CLK
clk => registers~1.CLK
clk => registers~2.CLK
clk => registers~3.CLK
clk => registers~4.CLK
clk => registers~5.CLK
clk => registers~6.CLK
clk => outA[0]~reg0.CLK
clk => outA[1]~reg0.CLK
clk => registers.CLK0


|top|vga:VGA_DISPLAY
clk50_in => clk25.CLK
display => process_1.IN1
display => process_1.IN1
display => process_1.IN1
display => process_1.IN1
display_win => blue_out.OUTPUTSELECT
display_win => blue_out.OUTPUTSELECT
display_win => blue_out.OUTPUTSELECT
display_win => blue_out.OUTPUTSELECT
display_win => blue_out.OUTPUTSELECT
display_win => blue_out.OUTPUTSELECT
display_win => red_out.OUTPUTSELECT
display_win => red_out.OUTPUTSELECT
display_win => red_out.OUTPUTSELECT
display_win => red_out.OUTPUTSELECT
display_win => red_out.OUTPUTSELECT
display_win => red_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
display_win => green_out.OUTPUTSELECT
win => red_out.OUTPUTSELECT
blink[0] => Equal0.IN3
blink[0] => Equal1.IN3
blink[0] => Equal2.IN3
blink[0] => Equal3.IN3
blink[1] => Equal0.IN2
blink[1] => Equal1.IN2
blink[1] => Equal2.IN2
blink[1] => Equal3.IN2
red_out[0] <= red_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[1] <= red_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[2] <= red_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[3] <= red_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[4] <= red_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[5] <= red_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[6] <= red_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[7] <= red_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[0] <= green_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[1] <= green_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[2] <= green_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[3] <= green_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[4] <= green_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[5] <= green_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[6] <= green_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[7] <= green_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[0] <= blue_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[1] <= blue_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[2] <= blue_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[3] <= blue_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[4] <= blue_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[5] <= blue_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[6] <= blue_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[7] <= blue_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hs_out <= hs_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk25_out <= clk25.DB_MAX_OUTPUT_PORT_TYPE
sync <= <GND>
blank <= <VCC>
vs_out <= vs_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|double_seven_seg:SevenSeg1
clk => segment7[0]~reg0.CLK
clk => segment7[1]~reg0.CLK
clk => segment7[2]~reg0.CLK
clk => segment7[3]~reg0.CLK
clk => segment7[4]~reg0.CLK
clk => segment7[5]~reg0.CLK
clk => segment7[6]~reg0.CLK
clk => segment7[7]~reg0.CLK
clk => segment7[8]~reg0.CLK
clk => segment7[9]~reg0.CLK
clk => segment7[10]~reg0.CLK
clk => segment7[11]~reg0.CLK
clk => segment7[12]~reg0.CLK
clk => segment7[13]~reg0.CLK
bcd[0] => Ram0.RADDR
bcd[1] => Ram0.RADDR1
bcd[2] => Ram0.RADDR2
bcd[3] => Ram0.RADDR3
bcd[4] => Ram0.RADDR4
segment7[0] <= segment7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[1] <= segment7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[2] <= segment7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[3] <= segment7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[4] <= segment7[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[5] <= segment7[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[6] <= segment7[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[7] <= segment7[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[8] <= segment7[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[9] <= segment7[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[10] <= segment7[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[11] <= segment7[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[12] <= segment7[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[13] <= segment7[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|double_seven_seg:SevenSeg2
clk => segment7[0]~reg0.CLK
clk => segment7[1]~reg0.CLK
clk => segment7[2]~reg0.CLK
clk => segment7[3]~reg0.CLK
clk => segment7[4]~reg0.CLK
clk => segment7[5]~reg0.CLK
clk => segment7[6]~reg0.CLK
clk => segment7[7]~reg0.CLK
clk => segment7[8]~reg0.CLK
clk => segment7[9]~reg0.CLK
clk => segment7[10]~reg0.CLK
clk => segment7[11]~reg0.CLK
clk => segment7[12]~reg0.CLK
clk => segment7[13]~reg0.CLK
bcd[0] => Ram0.RADDR
bcd[1] => Ram0.RADDR1
bcd[2] => Ram0.RADDR2
bcd[3] => Ram0.RADDR3
bcd[4] => Ram0.RADDR4
segment7[0] <= segment7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[1] <= segment7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[2] <= segment7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[3] <= segment7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[4] <= segment7[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[5] <= segment7[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[6] <= segment7[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[7] <= segment7[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[8] <= segment7[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[9] <= segment7[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[10] <= segment7[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[11] <= segment7[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[12] <= segment7[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment7[13] <= segment7[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE


